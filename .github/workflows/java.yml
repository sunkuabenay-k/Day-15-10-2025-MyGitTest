name: Java CI with Maven

on:
  # Triggers the workflow on push and pull request events to the 'main' branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  # Allows you to manually run the workflow from the Actions tab
  workflow_dispatch:

jobs:
  build:
    # The type of machine to run the job on
    runs-on: ubuntu-latest
    
    steps:
    
    # 1. Checkout Code
    - name: Checkout repository code
      uses: actions/checkout@v4

    # 2. Setup Java Environment
    - name: Set up JDK 1.8 (Java 8)
      uses: actions/setup-java@v4
      with:
        # Based on your pom.xml, we set the version to 8
        java-version: '8' 
        distribution: 'temurin'
        # Cache dependencies for faster subsequent builds
        cache: maven 
        
    # 3. Build and Test
    - name: Compile, Test, and Package with Maven
      # The '-B' (batch mode) flag makes the output cleaner in the CI logs
      # The 'package' goal will run: validate, compile, test, and package
      run: mvn -B package --file pom.xml
      
    # 4. (Optional) Archive Artifact
    # If the previous step is successful, this step saves the compiled JAR file
    - name: Upload production artifact (JAR/WAR)
      uses: actions/upload-artifact@v4
      with:
        name: my-app-package
        # The 'target' folder is where Maven places the final built artifact
        path: target/*.jar
